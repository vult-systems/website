---
/**
 * SplitPanel - Reusable two-column layout container
 * 
 * Usage:
 * <SplitPanel leftSlot="left" rightSlot="right" reverse={false} gap="lg" />
 * 
 * Props:
 * - reverse: boolean - Swap columns on desktop
 * - gap: 'sm' | 'md' | 'lg' | 'xl' - Space between columns
 * - verticalAlign: 'start' | 'center' | 'end' - Vertical alignment
 * - stackOnMobile: boolean - Stack vertically on mobile (default: true)
 */

interface Props {
  reverse?: boolean;
  gap?: 'sm' | 'md' | 'lg' | 'xl';
  verticalAlign?: 'start' | 'center' | 'end';
  stackOnMobile?: boolean;
}

const { 
  reverse = false, 
  gap = 'lg', 
  verticalAlign = 'start',
  stackOnMobile = true 
} = Astro.props;

const gapClasses = {
  sm: 'gap-4 lg:gap-6',
  md: 'gap-6 lg:gap-8',
  lg: 'gap-8 lg:gap-12',
  xl: 'gap-12 lg:gap-16',
};

const alignClasses = {
  start: 'items-start',
  center: 'items-center',
  end: 'items-end',
};

const gridClass = stackOnMobile 
  ? 'grid grid-cols-1 lg:grid-cols-2' 
  : 'grid grid-cols-2';
---

<div class={`${gridClass} ${gapClasses[gap]} ${alignClasses[verticalAlign]}`}>
  <div class={reverse ? 'lg:order-2' : 'lg:order-1'}>
    <slot name="left" />
  </div>
  <div class={reverse ? 'lg:order-1' : 'lg:order-2'}>
    <slot name="right" />
  </div>
</div>
